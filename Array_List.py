# 03-1 배열과 리스트
# 1. 배열
# 메모리의 연속된 공간에 데이터가 채워져있는 자료구조
# 배열 내 요소는 인덱스로 참조 가능하다
# 또, 선언한 자료형만 값을 저장할 수 있다.

# 특징
# 1) 인덱스로 해당 요소를 바로 접근할 수 있다.
# 2) 새 데이터를 삽입하거나 특정 인덱스에 위치한 데이터를 삭제하기는 어렵다.
# 해당 인덱스 주변의 값들을 이동시켜야 한다.
# 3) 구조가 간단해 코딩 테스트에서 많이 이용된다.


# 2. 리스트
# 데이터와 포인터를 묶은 노드를 포인터로 연결한 자료구조

# 특징
# 1) 인덱스가 없어 데이터에 접근하기 위해선 헤드 포인터부터 차례대로 접근해야 한다.
# 따라서 데이터 접근 속도가 느리다.
# 2) 포인터로 연결되어 있어 데이터 삽입 및 삭제 연산이 빠르다
# 3) 선언 시 크기를 지정하지 않아도 된다.
# 즉, 리스트 크기는 가변적으로 조정할 수 있다.
# 4) 포인터를 저장할 공간이 필요해 배열보다는 구조가 복잡하다


# Note. 파이썬에서는 배열과 리스트를 구분하지 않는다.
# 파이썬에서 리스트는 배열의 특징을 갖기 때문에 이 특징을 이용해 코드를 더욱 쉽게 구현할 수 있다.